	AREA text, CODE, READONLY
	EXPORT asm_math

;R0 = Input	 (arg into the function)
;R1 = Output (arg into the function)
;R2 = length (arg into the function) 
;R3 = index count

;Output: min, max, min_index, max_index, rms

;S0 = min val 
;S1 = max val
;S2 = current val
;S3 = RMS
;S4 = length 
;S5 = index 




asm_math
	MOV R3, #0x40000000 
	SUB R3, R3, R3 ;SETTING INDEX TO 0
	VLDM R0, {S2} ; LOADING INPUT INTO CURRENT VAL
	VMOV.F32 S0, S2 ;INITIALIZING MINIMUM VALUE (TO FIX)
	VMOV.F32 S1, S2 ;INITIALIZING MAXIMUM VALUE (TO FIX)
	VMOV.F32 S4, R2 ;SETTING S4 TO LENGTH - SHOULD BE ABLE TO DELETE
	
  ;checks iterator and you have a branch here
	; loop until index == length
loop
	CMP R2, R3 ;COMPARE INDEX WITH LENGTH - TERMINATION CONDITION
	BEQ rms ;(if index > length then go to RMS) 
	VLDM R0, {S2} ; LOADING INPUT INTO CURRENT VAL
	VCMP.F32 S2, S0 ;COMPARING CURRENT VAL WITH MINIMUM VALUE
	BLE minimum
	VCMP.F32 S2, S1 ;COMPARING CURRENT VAL WITH MAX VAL
	BGE maximum
	B equal
	
minimum
	VMOV.F32 S0, S2 ;REPLACING THE MIN VAL WITH THE CURRENT VAL
	;ADD R4, R1, #8 ;STORE min_index ADDRESS in R4 
 	;STR R3, [R4]
	VMOV.F32 S5, R3
	VSTR.F32 S5, [R1, #8]
	VMLA.F32 S3,S2,S2 ;SQUARE VALUE AND ADD IT TO S3 (RMS VALUE)
	ADD R3,R3,#1 ;ITERATE INDEX COUNT
	ADD R0,R0,#4 ;ITERATE ADDRESS OF INPUT - ITERATE BY 4 -- next input
	B loop
	
maximum
	VMOV.F32 S1, S2 ;REPLACING THE MAX VALUE WITH THE CURRENT VAL
	VMOV.F32 S5, R3
	VSTR.F32 S5, [R1, #12]
	VMLA.F32 S3,S2,S2 ;SQUARE THE VALUE AND ADD IT TO RMS VALUE
	ADD R3,R3,#1 ;ITERATE INDEX
	ADD R0,R0,#4 ;ITERATE ADDRESS OF INPUT - ITERATE BY 4 -- next input
	B loop
	
equal
	VMLA.F32 S3,S2,S2 ;SQUARE THE VALUE AND ADD IT TO RMS VALUE
	ADD R0,R0,#4 ;ITERATE ADDRESS OF INPUT - ITERATE BY 4 -- next input
	ADD R3,R3,#1 ;ITERATE INDEX
	B loop
	
rms
	VDIV.F32 S3, S3, S4 ;DIVIDE RMS VALUE BY LENGTH
	VSQRT.F32 S3, S3 ;SQUAREROOT WHAT REMAINS
	ADD R4, R1, #16 ;MOVE POINTER TO RMS OUTPUT REGISTER
	VSTR.F32 S3, [R4] ;STORE RMS VALUE IN APPROPRIATE REGISTER IN OUTPUT 
	ADD R4, R1, #0 ;REGISTER OUTPUT OF MINVAL
	VSTR.F32 S0, [R4]; STORING MINIMUM VALUE 
	ADD R4, R1, #4 ;REGISTER OUTPUT OF MAXVAL
	VSTR.F32 S1, [R4] ;STORING MAXVAL
	B END

END
