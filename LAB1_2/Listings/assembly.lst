


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             text, CODE, READONLY
    2 00000000                 EXPORT           asm_math
    3 00000000         
    4 00000000         ;R0 = Input  (arg into the function)
    5 00000000         ;R1 = Output (arg into the function)
    6 00000000         ;R2 = length (arg into the function) 
    7 00000000         ;R3 = index count
    8 00000000         
    9 00000000         ;Output: min, max, min_index, max_index, rms
   10 00000000         
   11 00000000         ;S0 = min val 
   12 00000000         ;S1 = max val
   13 00000000         ;S2 = current val
   14 00000000         ;S3 = RMS
   15 00000000         ;S4 = length 
   16 00000000         ;S5 = index 
   17 00000000         
   18 00000000         
   19 00000000         
   20 00000000         
   21 00000000         asm_math
   22 00000000 F04F 4380       MOV              R3, #0x40000000
   23 00000004 EBA3 0303       SUB              R3, R3, R3  ;SETTING INDEX TO 0
                                                            
   24 00000008 EC90 1A01       VLDM             R0, {S2}    ; LOADING INPUT INT
                                                            O CURRENT VAL
   25 0000000C EEB0 0A41       VMOV.F32         S0, S2      ;INITIALIZING MINIM
                                                            UM VALUE (TO FIX)
   26 00000010 EEF0 0A41       VMOV.F32         S1, S2      ;INITIALIZING MAXIM
                                                            UM VALUE (TO FIX)
   27 00000014 EE02 2A10       VMOV.F32         S4, R2      ;SETTING S4 TO LENG
                                                            TH - SHOULD BE ABLE
                                                             TO DELETE
   28 00000018         
   29 00000018         ;checks iterator and you have a branch here
   30 00000018         ; loop until index == length
   31 00000018         loop
   32 00000018 429A            CMP              R2, R3      ;COMPARE INDEX WITH
                                                             LENGTH - TERMINATI
                                                            ON CONDITION
   33 0000001A D029            BEQ              rms         ;(if index > length
                                                             then go to RMS) 
   34 0000001C EC90 1A01       VLDM             R0, {S2}    ; LOADING INPUT INT
                                                            O CURRENT VAL
   35 00000020 EEB4 1A40       VCMP.F32         S2, S0      ;COMPARING CURRENT 
                                                            VAL WITH MINIMUM VA
                                                            LUE
   36 00000024 DD03            BLE              minimum
   37 00000026 EEB4 1A60       VCMP.F32         S2, S1      ;COMPARING CURRENT 
                                                            VAL WITH MAX VAL
   38 0000002A DA0D            BGE              maximum
   39 0000002C E019            B                equal
   40 0000002E         
   41 0000002E         minimum
   42 0000002E EEB0 0A41       VMOV.F32         S0, S2      ;REPLACING THE MIN 
                                                            VAL WITH THE CURREN
                                                            T VAL
   43 00000032         ;ADD R4, R1, #8 ;STORE min_index ADDRESS in R4 
   44 00000032         ;STR R3, [R4]



ARM Macro Assembler    Page 2 


   45 00000032 EE02 3A90       VMOV.F32         S5, R3
   46 00000036 EDC1 2A02       VSTR.F32         S5, [R1, #8]
   47 0000003A EE41 1A01       VMLA.F32         S3,S2,S2    ;SQUARE VALUE AND A
                                                            DD IT TO S3 (RMS VA
                                                            LUE)
   48 0000003E F103 0301       ADD              R3,R3,#1    ;ITERATE INDEX COUN
                                                            T
   49 00000042 F100 0004       ADD              R0,R0,#4    ;ITERATE ADDRESS OF
                                                             INPUT - ITERATE BY
                                                             4 -- next input
   50 00000046 E7E7            B                loop
   51 00000048         
   52 00000048         maximum
   53 00000048 EEF0 0A41       VMOV.F32         S1, S2      ;REPLACING THE MAX 
                                                            VALUE WITH THE CURR
                                                            ENT VAL
   54 0000004C EE02 3A90       VMOV.F32         S5, R3
   55 00000050 EDC1 2A03       VSTR.F32         S5, [R1, #12]
   56 00000054 EE41 1A01       VMLA.F32         S3,S2,S2    ;SQUARE THE VALUE A
                                                            ND ADD IT TO RMS VA
                                                            LUE
   57 00000058 F103 0301       ADD              R3,R3,#1    ;ITERATE INDEX
   58 0000005C F100 0004       ADD              R0,R0,#4    ;ITERATE ADDRESS OF
                                                             INPUT - ITERATE BY
                                                             4 -- next input
   59 00000060 E7DA            B                loop
   60 00000062         
   61 00000062         equal
   62 00000062 EE41 1A01       VMLA.F32         S3,S2,S2    ;SQUARE THE VALUE A
                                                            ND ADD IT TO RMS VA
                                                            LUE
   63 00000066 F100 0004       ADD              R0,R0,#4    ;ITERATE ADDRESS OF
                                                             INPUT - ITERATE BY
                                                             4 -- next input
   64 0000006A F103 0301       ADD              R3,R3,#1    ;ITERATE INDEX
   65 0000006E E7D3            B                loop
   66 00000070         
   67 00000070         rms
   68 00000070 EEC1 1A82       VDIV.F32         S3, S3, S4  ;DIVIDE RMS VALUE B
                                                            Y LENGTH
   69 00000074 EEF1 1AE1       VSQRT.F32        S3, S3      ;SQUAREROOT WHAT RE
                                                            MAINS
   70 00000078 F101 0410       ADD              R4, R1, #16 ;MOVE POINTER TO RM
                                                            S OUTPUT REGISTER
   71 0000007C EDC4 1A00       VSTR.F32         S3, [R4]    ;STORE RMS VALUE IN
                                                             APPROPRIATE REGIST
                                                            ER IN OUTPUT 
   72 00000080 F101 0400       ADD              R4, R1, #0  ;REGISTER OUTPUT OF
                                                             MINVAL
   73 00000084 ED84 0A00       VSTR.F32         S0, [R4]    ; STORING MINIMUM V
                                                            ALUE 
   74 00000088 F101 0404       ADD              R4, R1, #4  ;REGISTER OUTPUT OF
                                                             MAXVAL
   75 0000008C EDC4 0A00       VSTR.F32         S1, [R4]    ;STORING MAXVAL
   76 00000090 E7FF            B                END
   77 00000092         
   78 00000092         END
                       
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int



ARM Macro Assembler    Page 3 


erwork --depend=.\objects\assembly.d -o.\objects\assembly.o -IP:\ECSE426\LAB1_2
\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.0-Beta4\CMSIS\Include -IC:\Keil_v5\ARM
\PACK\Keil\STM32F4xx_DFP\2.7.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -IC:\K
eil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.11.0\Drivers\CMSIS\Device\ST\STM32F4xx\Inc
lude --predefine="__UVISION_VERSION SETA 515" --predefine="_RTE_ SETA 1" --pred
efine="STM32F407xx SETA 1" --list=.\listings\assembly.lst Assembly.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

END 00000092

Symbol: END
   Definitions
      At line 78 in file Assembly.s
   Uses
      At line 76 in file Assembly.s
Comment: END used once
asm_math 00000000

Symbol: asm_math
   Definitions
      At line 21 in file Assembly.s
   Uses
      At line 2 in file Assembly.s
Comment: asm_math used once
equal 00000062

Symbol: equal
   Definitions
      At line 61 in file Assembly.s
   Uses
      At line 39 in file Assembly.s
Comment: equal used once
loop 00000018

Symbol: loop
   Definitions
      At line 31 in file Assembly.s
   Uses
      At line 50 in file Assembly.s
      At line 59 in file Assembly.s
      At line 65 in file Assembly.s

maximum 00000048

Symbol: maximum
   Definitions
      At line 52 in file Assembly.s
   Uses
      At line 38 in file Assembly.s
Comment: maximum used once
minimum 0000002E

Symbol: minimum
   Definitions
      At line 41 in file Assembly.s
   Uses
      At line 36 in file Assembly.s
Comment: minimum used once
rms 00000070

Symbol: rms
   Definitions
      At line 67 in file Assembly.s
   Uses
      At line 33 in file Assembly.s
Comment: rms used once
text 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: text
   Definitions
      At line 1 in file Assembly.s
   Uses
      None
Comment: text unused
8 symbols
342 symbols in table
